name: Continuous Integration
on: [push]

jobs:
    # Runs `npm testcheck` on the code, which checks for TypeScript errors and runs Jest tests.
    testcheck:
        runs-on: ubuntu-latest

        steps:
            - name: Clone repository
              uses: actions/checkout@v2

            # Use Node version specified in .nvmrc
            # https://github.com/actions/setup-node/issues/32#issuecomment-525791142
            - name: Read .nvmrc
              id: nvm
              run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"

            - name: Use Node.js (.nvmrc)
              uses: actions/setup-node@v1
              with:
                  node-version: "${{ steps.nvm.outputs.NVMRC }}"

            # Restore npm cache, makes it way faster
            # https://github.com/actions/cache/blob/master/examples.md#node---npm
            - name: Get npm cache directory path
              id: npm-cache-dir-path
              run: echo "::set-output name=dir::$(npm cache dir)"

            - uses: actions/cache@v2
              id: npm-cache
              with:
                  path: ${{ steps.npm-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-${{ steps.nvm.outputs.NVMRC }}-npm-${{ hashFiles('**/npm.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-${{ steps.nvm.outputs.NVMRC }}-npm

            - uses: actions/cache@v2
              id: node-modules-cache
              with:
                  path: node_modules
                  key: ${{ runner.os }}-${{ steps.nvm.outputs.NVMRC }}-node-modules-${{ hashFiles('**/npm.lock') }}

            - name: Install dependencies
              run: npm --frozen-lockfile --network-concurrency 1

            - name: Register Problem Matcher
              run: echo "##[add-matcher].github/problemMatchers/tsc.json"

            - name: Run tests & checks
              run: npm testcheck

    # Runs `bundlewatch` on the code to see if our Webpack build assets exceed a given file size.
    bundlewatch:
        runs-on: ubuntu-latest

        steps:
            - name: Clone repository
              uses: actions/checkout@v2

            # Use Node version specified in .nvmrc
            # https://github.com/actions/setup-node/issues/32#issuecomment-525791142
            - name: Read .nvmrc
              id: nvm
              run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"

            - name: Use Node.js (.nvmrc)
              uses: actions/setup-node@v1
              with:
                  node-version: "${{ steps.nvm.outputs.NVMRC }}"

            # Restore npm cache, makes it way faster
            # https://github.com/actions/cache/blob/master/examples.md#node---npm
            - name: Get npm cache directory path
              id: npm-cache-dir-path
              run: echo "::set-output name=dir::$(npm cache dir)"

            - uses: actions/cache@v2
              id: npm-cache
              with:
                  path: ${{ steps.npm-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-${{ steps.nvm.outputs.NVMRC }}-npm-${{ hashFiles('**/npm.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-${{ steps.nvm.outputs.NVMRC }}-npm

            - uses: actions/cache@v2
              id: node-modules-cache
              with:
                  path: node_modules
                  key: ${{ runner.os }}-${{ steps.nvm.outputs.NVMRC }}-node-modules-${{ hashFiles('**/npm.lock') }}

            - name: Install dependencies
              run: npm --frozen-lockfile --network-concurrency 1

            - name: Run bundlewatch
              run: npm bundlewatch
              env:
                  BUNDLEWATCH_GITHUB_TOKEN: "${{ secrets.BUNDLEWATCH_GITHUB_TOKEN }}"
